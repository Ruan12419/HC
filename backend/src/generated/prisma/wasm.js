
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.SetorScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash',
  tipo: 'tipo',
  ativo: 'ativo',
  criado_em: 'criado_em'
};

exports.Prisma.ResidenteScalarFieldEnum = {
  id: 'id',
  crm: 'crm',
  especialidade: 'especialidade',
  ano_residencia: 'ano_residencia',
  setor_id: 'setor_id'
};

exports.Prisma.SupervisorScalarFieldEnum = {
  id: 'id',
  crm: 'crm',
  setor_id: 'setor_id'
};

exports.Prisma.AdministradorScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.FrequenciaScalarFieldEnum = {
  id: 'id',
  residente_id: 'residente_id',
  data: 'data',
  presente: 'presente',
  horario_chegada: 'horario_chegada',
  horario_saida: 'horario_saida',
  observacoes: 'observacoes',
  registrado_por: 'registrado_por'
};

exports.Prisma.CampoAvaliacaoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descricao: 'descricao',
  obrigatorio: 'obrigatorio',
  tipo: 'tipo',
  ordem: 'ordem'
};

exports.Prisma.AvaliacaoScalarFieldEnum = {
  id: 'id',
  residente_id: 'residente_id',
  supervisor_id: 'supervisor_id',
  data_avaliacao: 'data_avaliacao',
  periodo_inicio: 'periodo_inicio',
  periodo_fim: 'periodo_fim',
  criado_em: 'criado_em'
};

exports.Prisma.RespostaAvaliacaoScalarFieldEnum = {
  id: 'id',
  avaliacao_id: 'avaliacao_id',
  campo_id: 'campo_id',
  resposta_texto: 'resposta_texto',
  resposta_numerica: 'resposta_numerica',
  resposta_checkbox: 'resposta_checkbox'
};

exports.Prisma.ComentarioScalarFieldEnum = {
  id: 'id',
  avaliacao_id: 'avaliacao_id',
  supervisor_id: 'supervisor_id',
  comentario: 'comentario',
  criado_em: 'criado_em'
};

exports.Prisma.LogAcessoScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  data_hora: 'data_hora',
  acao: 'acao'
};

exports.Prisma.NotificacaoScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  titulo: 'titulo',
  mensagem: 'mensagem',
  lida: 'lida',
  data_envio: 'data_envio'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.SetorOrderByRelevanceFieldEnum = {
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  nome: 'nome',
  email: 'email',
  senha_hash: 'senha_hash'
};

exports.Prisma.ResidenteOrderByRelevanceFieldEnum = {
  crm: 'crm',
  especialidade: 'especialidade'
};

exports.Prisma.SupervisorOrderByRelevanceFieldEnum = {
  crm: 'crm'
};

exports.Prisma.FrequenciaOrderByRelevanceFieldEnum = {
  observacoes: 'observacoes'
};

exports.Prisma.CampoAvaliacaoOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  descricao: 'descricao'
};

exports.Prisma.RespostaAvaliacaoOrderByRelevanceFieldEnum = {
  resposta_texto: 'resposta_texto'
};

exports.Prisma.ComentarioOrderByRelevanceFieldEnum = {
  comentario: 'comentario'
};

exports.Prisma.LogAcessoOrderByRelevanceFieldEnum = {
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  acao: 'acao'
};

exports.Prisma.NotificacaoOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  mensagem: 'mensagem'
};
exports.TipoUsuario = exports.$Enums.TipoUsuario = {
  residente: 'residente',
  supervisor: 'supervisor',
  administrador: 'administrador'
};

exports.TipoCampo = exports.$Enums.TipoCampo = {
  numerica: 'numerica',
  texto: 'texto',
  checkbox: 'checkbox'
};

exports.Prisma.ModelName = {
  Setor: 'Setor',
  Usuario: 'Usuario',
  Residente: 'Residente',
  Supervisor: 'Supervisor',
  Administrador: 'Administrador',
  Frequencia: 'Frequencia',
  CampoAvaliacao: 'CampoAvaliacao',
  Avaliacao: 'Avaliacao',
  RespostaAvaliacao: 'RespostaAvaliacao',
  Comentario: 'Comentario',
  LogAcesso: 'LogAcesso',
  Notificacao: 'Notificacao'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
